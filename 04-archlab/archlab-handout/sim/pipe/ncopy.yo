                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 
                            | 	# Loop header
0x000: 6300                 | 	xorq %rax,%rax		# count = 0;
0x002: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx		# len < 8?
0x00c: 728401000000000000   | 	jl Remain		# goto Remain
                            | 
0x015:                      | Loop1:
0x015: 50870000000000000000 | 	mrmovq (%rdi), %r8	# read val1 from src...
0x01f: 50970800000000000000 | 	mrmovq 8(%rdi), %r9 # read val2
0x029: 40860000000000000000 | 	rmmovq %r8, (%rsi)	# store val1
0x033: 6288                 | 	andq %r8, %r8		# val <= 0?
0x035: 714800000000000000   | 	jle Loop2		
0x03e: c0f00100000000000000 | 	iaddq $1, %rax # count++
0x048:                      | Loop2:
0x048: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	# store val2
0x052: 6299                 | 	andq %r9, %r9		# val <= 0?
0x054: 716700000000000000   | 	jle Loop3		
0x05d: c0f00100000000000000 | 	iaddq $1, %rax # count++
                            | 
0x067:                      | Loop3:
0x067: 50871000000000000000 | 	mrmovq 16(%rdi), %r8	# read val3 from src...
0x071: 50971800000000000000 | 	mrmovq 24(%rdi), %r9 # read val4
0x07b: 40861000000000000000 | 	rmmovq %r8, 16(%rsi)	# store val3
0x085: 6288                 | 	andq %r8, %r8		# val <= 0?
0x087: 719a00000000000000   | 	jle Loop4		
0x090: c0f00100000000000000 | 	iaddq $1, %rax # count++
0x09a:                      | Loop4:
0x09a: 40961800000000000000 | 	rmmovq %r9, 24(%rsi)	# store val4
0x0a4: 6299                 | 	andq %r9, %r9		# val <= 0?
0x0a6: 71b900000000000000   | 	jle Loop5		
0x0af: c0f00100000000000000 | 	iaddq $1, %rax # count++
                            | 
0x0b9:                      | Loop5:
0x0b9: 50872000000000000000 | 	mrmovq 32(%rdi), %r8	# read val5 from src...
0x0c3: 50972800000000000000 | 	mrmovq 40(%rdi), %r9 # read val6
0x0cd: 40862000000000000000 | 	rmmovq %r8, 32(%rsi)	# store val5
0x0d7: 6288                 | 	andq %r8, %r8		# val <= 0?
0x0d9: 71ec00000000000000   | 	jle Loop6		
0x0e2: c0f00100000000000000 | 	iaddq $1, %rax # count++
0x0ec:                      | Loop6:
0x0ec: 40962800000000000000 | 	rmmovq %r9, 40(%rsi)	# store val6
0x0f6: 6299                 | 	andq %r9, %r9		# val <= 0?
0x0f8: 710b01000000000000   | 	jle Loop7		
0x101: c0f00100000000000000 | 	iaddq $1, %rax # count++
                            | 
0x10b:                      | Loop7:
0x10b: 50873000000000000000 | 	mrmovq 48(%rdi), %r8	# read val7 from src...
0x115: 50973800000000000000 | 	mrmovq 56(%rdi), %r9 # read val8
0x11f: 40863000000000000000 | 	rmmovq %r8, 48(%rsi)	# store val7
0x129: 6288                 | 	andq %r8, %r8		# val <= 0?
0x12b: 713e01000000000000   | 	jle Loop8		
0x134: c0f00100000000000000 | 	iaddq $1, %rax # count++
0x13e:                      | Loop8:
0x13e: 40963800000000000000 | 	rmmovq %r9, 56(%rsi)	# store val8
0x148: 6299                 | 	andq %r9, %r9		# val <= 0?
0x14a: 715d01000000000000   | 	jle Test		
0x153: c0f00100000000000000 | 	iaddq $1, %rax # count++
0x15d:                      | Test:
0x15d: c0f74000000000000000 | 	iaddq $64, %rdi # src += 8
0x167: c0f64000000000000000 | 	iaddq $64, %rsi # dest += 8
0x171: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx # len -= 8
0x17b: 751500000000000000   | 	jge Loop1
                            | 
0x184:                      | Remain:
0x184: c0f20800000000000000 | 	iaddq $8, %rdx
0x18e: 769801000000000000   | 	jg R1
0x197: 90                   | 	ret
0x198:                      | R1:
0x198: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val1
0x1a2: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x1ac: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val1
0x1b6: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x1c0: 6288                 | 	andq %r8, %r8
0x1c2: 71d501000000000000   | 	jle R1_
0x1cb: c0f00100000000000000 | 	iaddq $1, %rax
0x1d5:                      | R1_:
0x1d5: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1df: 76e901000000000000   | 	jg R2
0x1e8: 90                   | 	ret
                            | 
0x1e9:                      | R2:
0x1e9: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val2
0x1f3: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x1fd: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val2
0x207: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x211: 6288                 | 	andq %r8, %r8
0x213: 712602000000000000   | 	jle R2_
0x21c: c0f00100000000000000 | 	iaddq $1, %rax
0x226:                      | R2_:
0x226: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x230: 763a02000000000000   | 	jg R3
0x239: 90                   | 	ret
                            | 
0x23a:                      | R3:
0x23a: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val1
0x244: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x24e: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val1
0x258: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x262: 6288                 | 	andq %r8, %r8
0x264: 717702000000000000   | 	jle R3_
0x26d: c0f00100000000000000 | 	iaddq $1, %rax
0x277:                      | R3_:
0x277: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x281: 768b02000000000000   | 	jg R4
0x28a: 90                   | 	ret
                            | 
0x28b:                      | R4:
0x28b: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val1
0x295: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x29f: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val1
0x2a9: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x2b3: 6288                 | 	andq %r8, %r8
0x2b5: 71c802000000000000   | 	jle R4_
0x2be: c0f00100000000000000 | 	iaddq $1, %rax
0x2c8:                      | R4_:
0x2c8: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x2d2: 76dc02000000000000   | 	jg R5
0x2db: 90                   | 	ret
                            | 
0x2dc:                      | R5:
0x2dc: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val1
0x2e6: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x2f0: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val1
0x2fa: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x304: 6288                 | 	andq %r8, %r8
0x306: 711903000000000000   | 	jle R5_
0x30f: c0f00100000000000000 | 	iaddq $1, %rax
0x319:                      | R5_:
0x319: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x323: 762d03000000000000   | 	jg R6
0x32c: 90                   | 	ret
                            | 
0x32d:                      | R6:
0x32d: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val1
0x337: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x341: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val1
0x34b: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x355: 6288                 | 	andq %r8, %r8
0x357: 716a03000000000000   | 	jle R6_
0x360: c0f00100000000000000 | 	iaddq $1, %rax
0x36a:                      | R6_:
0x36a: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x374: 767e03000000000000   | 	jg R7
0x37d: 90                   | 	ret
                            | 
0x37e:                      | R7:
0x37e: 50870000000000000000 | 	mrmovq (%rdi), %r8 #fetch val1
0x388: c0f70800000000000000 | 	iaddq $8, %rdi # src++
0x392: 40860000000000000000 | 	rmmovq %r8, (%rsi) # store val1
0x39c: c0f60800000000000000 | 	iaddq $8, %rsi # dest++
0x3a6: 6288                 | 	andq %r8, %r8
0x3a8: 71bb03000000000000   | 	jle R7_
0x3b1: c0f00100000000000000 | 	iaddq $1, %rax
0x3bb:                      | R7_:
0x3bb: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3c5:                      | Done:
0x3c5: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3c6:                      | End:
                            | #/* $end ncopy-ys */
